(define (mul-interval x y)
  (let ((x-lower (lower-bound x))
        (x-upper (upper-bound x))
        (y-lower (lower-bound y))
        (y-upper (upper-bound y)))
    (if (negative? x-lower)
      (if (negative? x-upper)
        (if (negative? y-lower)
          (if (negative? y-upper)
            (make-interval (* x-upper y-upper)
                           (* x-lower y-lower))
            (make-interval (* x-lower y-upper)
                           (* x-lower y-lower)))
          (make-interval (* x-lower y-upper)
                         (* x-upper y-lower)))
        (if (negative? y-lower)
          (if (negative? y-upper)
            (make-interval (* y-lower x-upper)
                           (* y-lower x-lower))
            (make-interval (min (* x-lower y-upper)
                                (* x-upper y-lower))
                           (max (* x-upper y-upper)
                                (* x-lower y-lower))))
          (make-interval (* x-lower y-upper)
                         (* x-upper y-upper))))
      (if (negative? y-lower)
        (if (negative? y-upper)
          (make-interval (* y-lower x-upper)
                         (* y-upper x-lower))
          (make-interval (* y-lower x-upper)
                         (* y-upper x-upper)))
        (make-interval (* x-lower y-lower)
                       (* x-upper y-upper))))))
